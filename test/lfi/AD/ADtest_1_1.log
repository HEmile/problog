[LVL9] Output level: 9
[INFO] Number of examples: 4
[DEBUG] 
[DEBUG] Processed Atoms:
[DEBUG] 	lfi_prob(0,t)::lfi_fact(0); lfi_prob(1,t)::lfi_fact(1) :- true
[DEBUG] 	a :- lfi_body(0)
[DEBUG] 	lfi_body(0) :- lfi_par(0), lfi_fact(0)
[DEBUG] 	lfi_par(0) :- true
[DEBUG] 	b :- lfi_body(1)
[DEBUG] 	lfi_body(1) :- lfi_par(1), lfi_fact(1)
[DEBUG] 	lfi_par(1) :- true
[DEBUG] 
[DEBUG] Base Program:
[DEBUG] 	body_1(0,multi) :- true.
[DEBUG] 	a :- lfi_body(0).
[DEBUG] 	lfi_body(0) :- lfi_par(0), lfi_fact(0).
[DEBUG] 	lfi_par(0) :- true.
[DEBUG] 	b :- lfi_body(1).
[DEBUG] 	lfi_body(1) :- lfi_par(1), lfi_fact(1).
[DEBUG] 	lfi_par(1) :- true.
[DEBUG] 	lfi_prob(0,t)::lfi_fact(0); lfi_prob(1,t)::lfi_fact(1) :- body_1(0,multi).
[DEBUG] 	
[DEBUG] AD Groups		:[(a, b)]
[DEBUG] 
[DEBUG] Compiling example 1/2
[DEBUG] 	Grounded Atoms:	(a,)
[DEBUG] 	Evidence:	[(a, True)]
[DEBUG] 	New ground_program:
[DEBUG] 		1: atom(identifier=(0, () {{}}, 0), probability=lfi_prob(0,t), group=(0, () {{}}), name=a, source=None)
[DEBUG] 		Evidence : 
[DEBUG] 		* a : 1
[DEBUG] 		
[DEBUG] 	Node 1:	Adding query for fact:	lfi_fact(0)
[DEBUG] 	Node 1:	Adding query for body:	lfi_body(0)	
[DEBUG] 	Node 1:	Adding query for par :	lfi_par(0)	
[DEBUG] 	New ground_program:
[DEBUG] 		1: atom(identifier=(0, () {{}}, 0), probability=lfi_prob(0,t), group=(0, () {{}}), name=a, source=None)
[DEBUG] 		Queries : 
[DEBUG] 		* lfi_fact(0) : 1 [query]
[DEBUG] 		* lfi_body(0) : 0 [query]
[DEBUG] 		* lfi_par(0) : 0 [query]
[DEBUG] 		Evidence : 
[DEBUG] 		* a : 1
[DEBUG] 		
[DEBUG] 	Compiled program:
[DEBUG] 		lfi_prob(0,t)::a.
[DEBUG] 		lfi_fact(0).
[DEBUG] 		query(lfi_fact(0)).
[DEBUG] 		lfi_body(0).
[DEBUG] 		query(lfi_body(0)).
[DEBUG] 		lfi_par(0).
[DEBUG] 		query(lfi_par(0)).
[DEBUG] 		evidence(a).
[DEBUG] 
[DEBUG] Compiling example 2/2
[DEBUG] 	Grounded Atoms:	(b,)
[DEBUG] 	Evidence:	[(b, True)]
[DEBUG] 	New ground_program:
[DEBUG] 		1: atom(identifier=(0, () {{}}, 1), probability=lfi_prob(1,t), group=(0, () {{}}), name=b, source=None)
[DEBUG] 		Evidence : 
[DEBUG] 		* b : 1
[DEBUG] 		
[DEBUG] 	Node 1:	Adding query for fact:	lfi_fact(1)
[DEBUG] 	Node 1:	Adding query for body:	lfi_body(1)	
[DEBUG] 	Node 1:	Adding query for par :	lfi_par(1)	
[DEBUG] 	New ground_program:
[DEBUG] 		1: atom(identifier=(0, () {{}}, 1), probability=lfi_prob(1,t), group=(0, () {{}}), name=b, source=None)
[DEBUG] 		Queries : 
[DEBUG] 		* lfi_fact(1) : 1 [query]
[DEBUG] 		* lfi_body(1) : 0 [query]
[DEBUG] 		* lfi_par(1) : 0 [query]
[DEBUG] 		Evidence : 
[DEBUG] 		* b : 1
[DEBUG] 		
[DEBUG] 	Compiled program:
[DEBUG] 		lfi_prob(1,t)::b.
[DEBUG] 		lfi_fact(1).
[DEBUG] 		query(lfi_fact(1)).
[DEBUG] 		lfi_body(1).
[DEBUG] 		query(lfi_body(1)).
[DEBUG] 		lfi_par(1).
[DEBUG] 		query(lfi_par(1)).
[DEBUG] 		evidence(b).
[INFO] Weights to learn: [t(_)::a, t(_)::b]
[INFO] Bodies: [lfi_body(0), lfi_body(1)]
[INFO] Parents: [lfi_par(0), lfi_par(1)]
[INFO] Initial weights: [0.016696946888441876, 0.16922403205802516]
[INFO] 
[INFO] Iteration 1
[DEBUG] Evaluating examples:
[DEBUG] Example 1:	Frequency = 3	p_evidence = 1.0	p_queries = {lfi_body(0): 1.0, lfi_par(0): 1.0}
[DEBUG] Example 2:	Frequency = 1	p_evidence = 1.0	p_queries = {lfi_body(1): 1.0, lfi_par(1): 1.0}
[DEBUG] Update probabilistic fact (0,): 3.0 / 4.0 = 0.75
[DEBUG] Update probabilistic fact (1,): 1.0 / 4.0 = 0.25
[INFO] Weights after iteration 1: [{t: 0.75}, {t: 0.25}]
[INFO] Score after iteration 1: 0.0
[INFO] 
[INFO] Iteration 2
[DEBUG] Evaluating examples:
[DEBUG] Example 1:	Frequency = 3	p_evidence = 1.0	p_queries = {lfi_body(0): 1.0, lfi_par(0): 1.0}
[DEBUG] Example 2:	Frequency = 1	p_evidence = 1.0	p_queries = {lfi_body(1): 1.0, lfi_par(1): 1.0}
[DEBUG] Update probabilistic fact (0,): 3.0 / 4.0 = 0.75
[DEBUG] Update probabilistic fact (1,): 1.0 / 4.0 = 0.25
[INFO] Weights after iteration 2: [{t: 0.75}, {t: 0.25}]
[INFO] Score after iteration 2: 0.0
[INFO] 
[INFO] Learned Model:	
[INFO] 0.75::a; 0.25::b.
[INFO] 
